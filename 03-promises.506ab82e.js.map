{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAA,MAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAYF,SAASC,cAAc,SACnCE,EAASH,SAASC,cAAc,WDCtC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,IACLH,EACKI,QAAQC,QACb,qBAAqBP,QAAeQ,OAAOd,EAAWe,OAASR,OAC/DS,MAAKC,IACLC,EAAApB,GAASqB,OAAOC,QAAQH,GACxBI,QAAQC,IAAIL,EAAK,IAIZL,QAAQW,OACb,oBAAoBjB,QAAeQ,OAAOd,EAAWe,OAASR,OAC9DiB,OAAMC,IACNP,EAAApB,GAASqB,OAAOO,QAAQD,GACxBJ,QAAQC,IAAIG,EAAM,KAIrBlB,E,CCnBON,SAASC,cAAc,uBDsB/ByB,iBAAiB,SAASC,IAC5BA,EAAEC,iBAEFlB,YAAW,KACT,IAAK,IAAImB,EAAI,EAAGA,GAAK1B,EAAOW,MAAOe,IACjCzB,EAAcyB,EAAGA,EAAI3B,EAAUY,MAAM,GAEtCf,EAAWe,MAAM","sources":["src/js/03-promises.js","src/js/myVariables.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { firstDelay, delayStep, amount, Btn } from './myVariables';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      return Promise.resolve(\n        `Fulfilled promise ${position} in ${Number(firstDelay.value) + delay}ms`\n      ).then(text => {\n        Notiflix.Notify.success(text);\n        console.log(text);\n      });\n      // Fulfill\n    } else {\n      return Promise.reject(\n        `Rejected promise ${position} in ${Number(firstDelay.value) + delay}ms`\n      ).catch(error => {\n        Notiflix.Notify.failure(error);\n        console.log(error);\n      });\n      // Reject\n    }\n  }, delay);\n}\n\nBtn.addEventListener('click', e => {\n  e.preventDefault();\n\n  setTimeout(() => {\n    for (let i = 1; i <= amount.value; i++) {\n      createPromise(i, i * delayStep.value);\n    }\n  }, firstDelay.value);\n});\n","const firstDelay = document.querySelector('#delay');\nconst delayStep = document.querySelector('#step');\nconst amount = document.querySelector('#amount');\n\nconst Btn = document.querySelector('button[data-action]');\nexport { firstDelay, delayStep, amount, Btn };\n"],"names":["$7Y9D8","parcelRequire","$38d0ce8d8bcb0495$export$8af06a2d8f6ceeb9","document","querySelector","$38d0ce8d8bcb0495$export$ee4164ffc1558cbd","$38d0ce8d8bcb0495$export$802cfe72001a1ee","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Promise","resolve","Number","value","then","text","$parcel$interopDefault","Notify","success","console","log","reject","catch","error","failure","addEventListener","e","preventDefault","i"],"version":3,"file":"03-promises.506ab82e.js.map"}